#!/usr/bin/env python3
# ruff: noqa: E501
"""Calculate a date according to args"""

import sys
import datetime
import re

mondir = [0,
        '01_Jan','02_Feb','03_Mar','04_Apr','05_May','06_Jun',
        '07_Jul','08_Aug','09_Sep','10_Oct','11_Nov','12_Dec']

dwc = {None: 1, '': 1, 'd': 1, 'D': 1, 'w': 7, 'W': 7, 'c': 28, 'C': 28,}

def plus(juncture, offset):
    """move juncture by offset days"""
    return juncture+datetime.timedelta(days=offset)

def nday(juncture):
    """Next day: juncture+1"""
    return plus(juncture, 1)

def pday(juncture):
    """Previous day: juncture-1"""
    return plus(juncture, -1)

def bom(juncture):
    """Beginning of month containing juncture"""
    return juncture.replace(day=1)

def eom(juncture):
    """End of month containing juncture"""
    return pday(bom(bom(juncture)+datetime.timedelta(days=31)))

def nmonth(juncture):
    """Same day next month"""
    return nday(eom(juncture)).replace(day=juncture.day)

def pmonth(juncture):
    """Same day prev month"""
    return pday(bom(juncture)).replace(day=juncture.day)

def calcudate(args):
    """Calculate a date according to args"""
    juncture = datetime.date.today()
    for arg in args.split() if isinstance(args, str) else args:
        if m := re.match(r"(\d\d\d\d)-(\d\d)-(\d\d)", arg):
            juncture = datetime.date(int(m[1]), int(m[2]), int(m[3]))
        elif m := re.match(r"(\d\d\d\d)[-/_](\d\d)", arg):
            juncture = datetime.date(int(m[1]), int(m[2]), 1)
        elif m := re.match(r"([-+]\d+)[mM]", arg):
            day = juncture.day
            stop = int(m[1])
            if stop < 0:
                for i in range(0, stop, -1):
                    juncture = pday(bom(juncture))
            else:
                for i in range(0, stop, 1):
                    juncture = nday(eom(juncture))
            juncture = juncture.replace(day=day)
        elif m := re.match(r"([-+]\d+)([dwcDWC]?)", arg):
            juncture = plus(juncture, int(m[1])*dwc[m[2]])
        elif m := re.match(r"(\d\d?)\Z", arg):
            juncture = juncture.replace(day=int(m[1]))
        elif arg in ['today', 'now']:
            juncture = datetime.date.today()
        elif arg == 'bom':
            juncture = bom(juncture)
        elif arg == 'eom':
            juncture = eom(juncture)
        elif arg == 'next':
            juncture = nmonth(juncture)
        elif arg == 'prev':
            juncture = pmonth(juncture)
        elif arg == 'nday':
            juncture = nday(juncture)
        elif arg == 'pday':
            juncture = pday(juncture)
    return juncture

if not sys.argv[1:] or sys.argv[1] in ['-?', '-h', '--help']:
    print("usage: calcudate "
          "{DATE YM bom eom next prev nday pday +N{dwcm} -N{dwcm} N}...",
          file=sys.stderr)
    sys.exit(1)
print(calcudate(sys.argv[1:]))
