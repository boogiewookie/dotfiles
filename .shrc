# run by every shell
unalias -a	# get rid of any nonsense .profile set
PATH=~/.local/bin:~/bin:~/opt/bin:/bin:/usr/bin:/sbin:/usr/sbin:/usr/local/bin:/usr/local/sbin:/usr/libexec:/usr/lib:/usr/games:/snap/bin:/home/dunc/encfs/stm/bin

# Interactive only beyond this test
case "$-" in
*i*) : ;;
*) exit 0 ;;
esac

# Set some preferences
if [ -d ~dunc ]; then
    DUNC=~dunc ; export DUNC
else
    DUNC= ; export DUNC
fi
VISUAL='vim' ; export VISUAL
EDITOR='vim' ; export EDITOR
EXINIT=':set ts=4 sw=4 ai nows' ; export EXINIT
PAGER='less -e' ; export PAGER
MANPAGER=less ; export MANPAGER
BLOCKSIZE="M" ; export BLOCKSIZE
CDPATH=".:/usr/local:$DUNC/src/NetBeans:$DUNC/src/finance:$DUNC/src/cgi:$DUNC/src:/usr/local/www:$DUNC/diary:$DUNC:$DUNC/Documents:$DUNC/Export:$DUNC/Export/Misc:$DUNC/Textarch:/usr/local/bastille/templates/metamaya:${LOCALCDPATH:-}" ; export CDPATH
CVSIGNORE='.git/' ; export CVSIGNORE
KEVETSCHWAB='Kevet-RothIRA.ofx Kevet-SchwabIRA.ofx Kevet-InheritedIRA.ofx Kevet-SchwabOne.ofx Kevet-PledgedAsset.ofx' ; export KEVETSCHWAB
SANDYSCHWAB='Sandy-SchwabIRA.ofx Sandy-SchwabOne.ofx Sandy-InheritedIRA.ofx Sandy-InheritedRoth.ofx Sandy-SchwabTaxable.ofx' ; export SANDYSCHWAB
SCHWABOFX="$KEVETSCHWAB $SANDYSCHWAB" ; export SCHWABOFX
SCHWABPDF="`echo $SCHWABOFX | sed 's/ofx/pdf/g'`" ; export SCHWABPDF
SCHWABCSV="`echo $SCHWABOFX | sed 's/ofx/csv/g'`" ; export SCHWABCSV
PYTHONPATH=$PYTHONPATH:$HOME/opt/lib/python3.8/site-packages ; export PYTHONPATH
PGHOST=localhost ; export PGHOST
NO_COLOR=exactly ; export NO_COLOR

[ -f ~/.secrets ] && . ~/.secrets

# set a sane prompt
if [ -n "$BASH_VERSION" ]; then
    PS1="${VIRTUAL_ENV_PROMPT:-}"'\u@\h:\w\$ '
    # If xterm set the title to 'host$ pwd as user' (or 'host# pwd as root')
    case "$TERM" in
    xterm*|rxvt*|screen)
        PS1="\[\033]0;\h\$ \w as \u\007\]${VIRTUAL_ENV_PROMPT:-}\u@\h\$ " ;;
    esac
else
    SIGL='$'
    HOST=$(hostname -s)
    [ "$(id -u)" = 0 ] && SIGL='#'
    PS1="${VIRTUAL_ENV_PROMPT:-}$USER@$HOST$SIGL "
fi

if ! which vim >/dev/null; then
	alias vim="vi"
elif [ -f ~/.vimrc ]; then
	alias vim="vim -u ~/.vimrc"
else
	alias vim="vim -N"
fi

# Add some aliases
alias cdbt='cd /usr/local/bastille/templates/metamaya'
alias cdrt='cd /usr/local/rocinante/templates/metamaya'
alias resource='. ${HOME}/.shrc'
alias bedunc='. ${DUNC:-$HOME}/.shrc'
alias h='fc -l'
alias history='fc -l'
alias ls='ls -F'
alias outofdate='pkg_version -vIL='
alias psg='pgrep -l'
alias vim=choosevi
alias vimpass="cfs && vim -n $DUNC/encfs/cfs/sessame.txt"
alias rpm='echo "You mean to say: lrpm"'
alias zl='zfs list'
alias za='zl -t all'
alias zb='zl -t bookmark'
alias ze='zl -o space,encryption,encryptionroot,keyformat,keylocation,keystatus,mountpoint,mounted'
alias zs='zl -t snapshot'
alias zm='zl -o name,used,mountpoint,canmount,mounted'

choosevi () {
    if which nvim >/dev/null; then
        command nvim "$@"
    elif which vim >/dev/null; then
        command vim "$@"
    else
        command vi "$@"
    fi
}

Man () {
	nroff -man $1 | $PAGER
}
TO=$DUNC/src ; export TO
to () {
	if test "$1" = "-c"
	then
		shift;
		dirs -c
		cd "${1:-$TO}"
	else
		popdir="$PWD";
        export popdir;
		cd "${1:-$TO}";
		destdir="$PWD";
		cd "$popdir";
		for d in `dirs -l`
		do
			if test "`dirs -l +0`" = "$destdir"
			then
				dirs
				return
			fi
			pushd -0 >/dev/null
		done
		pushd "$destdir"
	fi
}
ot () {
	popd $1
}
lookuppasswordfor () {
	cfs
	if test -f $DUNC/encfs/cfs/$1.txt
	then
		grep "$2" $DUNC/encfs/cfs/$1.txt
	elif test -d $DUNC/Export/.encfs/cfs
	then
		encfsctl cat $DUNC/Export/.encfs/cfs $1.txt | grep "$2"
	elif test -d $DUNC/Dropbox/.encfs/cfs
	then
		encfsctl cat $DUNC/Dropbox/.encfs/cfs $1.txt | grep "$2"
	else
		echo "There are no passwords mounted!"
	fi
}
pass () { 
	lookuppasswordfor sessame "$1"
}
bpass () { 
	lookuppasswordfor brandon "$1"
}
cpass () { 
	lookuppasswordfor carlton "$1"
}
spass () { 
	lookuppasswordfor sandy "$1"
}
cal () {
	/usr/bin/cal ${1:--3}
}
ncal () {
	/usr/bin/ncal ${1:--3}
}
errno () {
	for f in \
		/usr/include/sys/errno.h \
		/usr/include/asm/errno.h \
		/usr/src/lib/libc/gen/errlst.c \
		/usr/include/bsd/errno.h \
		/usr/include/asm-generic/errno-base.h \
		/usr/include/asm-generic/errno.h \
		/usr/include/asm-generic/errno-base.h \
		#leave this comment right here so the list of files above is easy to change
	do
		if test -f "$f" && grep -i -w "$1" "$f"
		then
			break
		fi
	done
}
li () { encfs -i 45 /net/servo/stm $DUNC/encfs/stm; bedunc; }
lo () {
	if test `uname -s` = 'FreeBSD'
	then
		umount $DUNC/encfs/cfs
		umount $DUNC/encfs/stm
	else
		fusermount -u $DUNC/encfs/cfs
		fusermount -u $DUNC/encfs/stm
	fi
}
ll () {
	if test -n "$1"
	then
		if test -f "/var/log/$1"
		then
			less +F "/var/log/$1"
		elif test -f "/var/log/$1.log"
		then
			less +F "/var/log/$1.log"
		fi
	elif test -f /var/log/messages
	then
		less +F /var/log/messages
	elif test -f /var/log/syslog
	then
		less +F /var/log/syslog
	fi
}
lh () {
    if test -f /var/log/httpd-access.log
    then
        tail -n 5 /var/log/httpd-*.log
    elif test -f /var/log/apache2/access.log
    then
        tail -n 5 /var/log/apache2/*.log
    fi
}
formatcc () {
	cc "$@" |
	sed '/^[\t ]*$/d' |
	indent -st -nbad -bap -nbc -br -c33 -cd33 -ncdb -ce -ci4 -cli0 -d0 -di1 -nfc1 -i4 -l78 -lp -npcs -psl -sc -sob
}
#function seepp () { (formatcc -E $1 | c++filt) |& less; }
seepp () { (formatcc -E $1) 2>&1 | less; }
seeasm () { (gcc -S -o - $1 | c++filt) 2>&1 | less; }
seepredef () { (echo "" | cc -E -dM -) 2>&1 | less; }
canrun () {
	which "$1" 1>/dev/null 
}
kv () {
	killall -9 -q vlc
}
sweep () {
	kv
	if canrun xclip
	then
		xclip -i -selection c < /dev/null
		xclip -i -selection p < /dev/null
	fi
	history -c
	history -w
	rm -rf \
		${HOME}/.bash_history \
		${HOME}/.thumbnails \
		${HOME}/.cache/thumbnails \
		${HOME}/.vim/.netrwhist \
		${HOME}/.viminfo \
		${HOME}/.xsession-errors \
		${HOME}/.local/share/recently-used.xbel \
		${HOME}/.config/ghb/EncodeLogs \
		${HOME}/.config/ghb/Activity.log.* \
		${HOME}/.config/ghb/ghb.pid.* \
		${HOME}/.config/picty/log \
		${HOME}/.config/gthumb/history.xbel \
		#leave me here
	if canrun clipit
	then
		killall clipit
		clipit &
	fi
	history -c
	dirs -c
}
off () {
	cd
	if canrun wiki
	then
		wiki stop
	fi
	kv
	lo
	sweep
	bedunc
	echo -e \\033c
}
activate () {
	if test -e .venv/bin/activate
	then
		. .venv/bin/activate
	elif test -e venv/bin/activate
	then
		. venv/bin/activate
	elif test -e env/bin/activate
	then
		. env/bin/activate
	elif test -e bin/activate
	then
		. bin/activate
	fi
}

# Add tab completions for git if you have them
[ -f ~/.git-completion.bash ] && . ~/.git-completion.bash

# Finally let ~/.shrc.local add or override anything unique to this user
if [ -f ~/.shrc.local ]; then
    .  ~/.shrc.local
fi
